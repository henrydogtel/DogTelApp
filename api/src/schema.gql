# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Dog {
  """Unique ID for the dog"""
  id: String!

  """The name of the pet"""
  name: String!

  """The birthdate of the dog"""
  birthdate: String!

  """List of image URLs for the dog"""
  images: [String!]!

  """Race of the dog"""
  race: String!

  """Size of the dog"""
  size: String!
  user: User!
  details: [AppointmentDetail!]!
}

type AppointmentDetail {
  """Unique ID for the appointment detail"""
  id: String!

  """Unit price per dog"""
  price: Float!
  dog: Dog!
  appointment: Appointment!
}

type ServicesSitter {
  id: String!
  name: String!
  description: String!
  sitter: Sitter!
}

type Credentials {
  id: String!
  password: String!
  passport: String!
  email: String!
  verified: Boolean!
  user: User!
  sitter: Sitter!
}

type Calification {
  id: String!
  rate: Float!
  userId: String!
  sitterId: String!
  comment: String
}

type Sitter {
  id: ID!
  firstname: String!
  lastname: String!
  birthdate: DateTime!
  address: String!
  role: String
  userImg: String!
  rate: Float!
  fee: Int!
  descripcion: String!
  services: [ServicesSitter!]!
  appointments: [Appointment!]!
  credentials: Credentials!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Appointment {
  """Unique ID for each appointment"""
  id: ID!

  """Start date of the appointment"""
  entryDate: DateTime

  """End date of the appointment"""
  departureDate: DateTime

  """Time of the appointment"""
  time: DateTime

  """Status of the appointment"""
  status: typeStatus

  """Total cost of the appointment"""
  total: Float

  """Customer note about the appointment"""
  note: String
  sitter: Sitter!
  user: User!
  detail: [AppointmentDetail!]!
}

"""Supported appointment statuses."""
enum typeStatus {
  PENDING
  CANCELLED
  ENDING
  FINISHED
}

type User {
  id: ID!
  firstname: String!
  lastname: String!
  birthdate: DateTime!
  address: String!
  role: String
  userImg: String!
  dogs: [Dog!]!
  appointments: [Appointment!]!
  credentials: Credentials!
}

type LoginResponse {
  user: User!
  access_token: String!
  email: String!
  role: String!
}

type RemoveServicesSitter {
  success: Boolean!
  message: String!
}

type RemoveSitterResponse {
  success: Boolean!
  message: String
}

type RemoveDogResponse {
  success: Boolean!
  message: String
}

type Query {
  servicesSitter(id: String!): ServicesSitter!
  appointments: [Appointment!]!
  appointment(id: Int!): Appointment!
  appointmentDetails: [AppointmentDetail!]!
  appointmentDetail(id: Int!): AppointmentDetail!
  users: [User!]!
  user(id: String!): User!
  credentials: [Credentials!]!
  sitters: [Sitter!]!
  sitter(id: String!): Sitter!
  dogs(idUser: String!): [Dog!]!
  dog(id: String!): Dog!
}

type Mutation {
  createServicesSitter(sitter_id: String!, CreateServicesSitterInput: CreateServicesSitterInput!): ServicesSitter!
  updateServicesSitter(updateServicesSitterInput: UpdateServicesSitterInput!): ServicesSitter!
  removeServicesSitter(id: String!): RemoveServicesSitter!
  createAppointment(createAppointment: CreateAppointmentInput!): Appointment!
  updateAppointment(updateAppointmentInput: UpdateAppointmentInput!): Appointment!
  removeAppointment(id: Int!): Appointment!
  createAppointmentDetail(createAppointmentDetailInput: CreateAppointmentDetailInput!): AppointmentDetail!
  updateAppointmentDetail(updateAppointmentDetailInput: UpdateAppointmentDetailInput!): AppointmentDetail!
  removeAppointmentDetail(id: Int!): AppointmentDetail!
  createUser(firstname: String!, lastname: String!, birthdate: DateTime!, address: String!, role: String!, password: String!, email: String!): User!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  uploadProfilePicture(userId: String!): User!
  login(email: String!, password: String!): LoginResponse!
  createCredential(createCredentialInput: CreateCredentialInput!): Credentials!
  createSitter(firstname: String!, lastname: String!, birthdate: DateTime!, address: String!, role: String!, password: String!, email: String!, fee: Float!, descripcion: String!): Sitter!
  updateSitter(updateSitterInput: UpdateSitterInput!): Sitter!
  removeSitter(id: String!): RemoveSitterResponse!
  createDog(idUser: String!, createDogInput: CreateDogInput!): Dog!
  updateDog(updateDogInput: UpdateDogInput!): Dog!
  removeDog(id: String!): RemoveDogResponse!
  createCalification(createCalificationDto: CreateCalificationDto!): Calification!
}

input CreateServicesSitterInput {
  name: String!
  description: String!
}

input UpdateServicesSitterInput {
  name: String
  description: String
  id: String! = "572c15b4-bec7-4a3b-a4e2-af50d5ca930b"
}

input CreateAppointmentInput {
  """Estado de la cita"""
  status: String

  """Fecha de inicio de la cita"""
  entryDate: DateTime

  """Fecha de finalización de la cita"""
  departureDate: DateTime

  """Hora de la cita"""
  time: DateTime

  """Total de la cita"""
  total: Float

  """Nota del cliente sobre la cita"""
  note: String
}

input UpdateAppointmentInput {
  """Estado de la cita"""
  status: String

  """Fecha de inicio de la cita"""
  entryDate: DateTime

  """Fecha de finalización de la cita"""
  departureDate: DateTime

  """Hora de la cita"""
  time: DateTime

  """Total de la cita"""
  total: Float

  """Nota del cliente sobre la cita"""
  note: String
  id: Int!
}

input CreateAppointmentDetailInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateAppointmentDetailInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateUserInput {
  firstname: String
  lastname: String
  birthdate: DateTime
  address: String
  role: String
  password: String
  email: String
  id: String!
}

input CreateCredentialInput {
  """Esta es la contrasena del usuario"""
  password: String!

  """Email del usuario"""
  email: String!
}

input UpdateSitterInput {
  id: ID!
  rate: Float!
  fee: Float!
}

input CreateDogInput {
  """The name of the pet"""
  name: String!

  """The birthdate of the dog"""
  birthdate: String!

  """List of image URLs for the dog"""
  images: [String!]!

  """Race of the dog"""
  race: String!

  """Size of the dog"""
  size: String!
}

input UpdateDogInput {
  """The name of the pet"""
  name: String

  """The birthdate of the dog"""
  birthdate: String

  """List of image URLs for the dog"""
  images: [String!]

  """Race of the dog"""
  race: String

  """Size of the dog"""
  size: String
  id: String! = "3dd4760a-536e-4e44-a2a7-7d143715d0ae"
}

input CreateCalificationDto {
  userId: String!
  sitterId: String!
  rate: Int!
  comment: String
}