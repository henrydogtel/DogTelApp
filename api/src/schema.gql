# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  firstname: String!
  lastname: String!
  birthdate: DateTime!
  address: String!
  role: String!
  credentialId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Sitter {
  id: String!
  firstname: String!
  lastname: String!
  birthdate: DateTime!
  address: String!
  role: String!
  credentialId: String!
  sitterId: String!
  area: String!
  rate: Int!
  fee: Int!
}

type ServicesSitter {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Appointment {
  """id unico para cada cita"""
  id: String!

  """Fecha de incio de la cita"""
  entryDate: DateTime

  """Fecha del final de la cita"""
  departureDate: DateTime

  """Hora de la cita"""
  time: DateTime

  """Estado de la cita"""
  status: String

  """total de la cita"""
  total: Float

  """Nota del cliente sobre la cita"""
  note: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  servicesSitter(id: Int!): ServicesSitter!
  appointments: [Appointment!]!
  appointment(id: Int!): Appointment!

}
type Credentials {
  credentialId: String!
  username: String!
  password: String!
  passport: String!
  email: String!
  verified: Boolean!
}

type Query {
  servicesSitter(id: Int!): ServicesSitter!
  user(id: Int!): User!
  credentials: [Credentials!]!
  credential(id: String!): Credentials!
  sitter(id: String!): Sitter!
}

type Mutation {
  createServicesSitter(createServicesSitterInput: CreateServicesSitterInput!): ServicesSitter!
  updateServicesSitter(updateServicesSitterInput: UpdateServicesSitterInput!): ServicesSitter!
  removeServicesSitter(id: Int!): ServicesSitter!
  createAppointment(createAppointment: CreateAppointmentInput!): Appointment!
  updateAppointment(updateAppointmentInput: UpdateAppointmentInput!): Appointment!
  removeAppointment(id: Int!): Appointment!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createCredential(createCredentialInput: CreateCredentialInput!): Credentials!
  updateCredential(updateCredentialInput: UpdateCredentialInput!): Credentials!
  removeCredential(id: String!): Credentials!
  createSitter(createSitterInput: CreateSitterInput!): Sitter!
  updateSitter(updateSitterInput: UpdateSitterInput!): Sitter!
  removeSitter(id: String!): Sitter!
}

input CreateServicesSitterInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateServicesSitterInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateAppointmentInput {
  """Estado de la cita"""
  status: String

  """Fecha de inicio de la cita"""
  entryDate: DateTime

  """Fecha de finalización de la cita"""
  departureDate: DateTime

  """Hora de la cita"""
  time: DateTime

  """Total de la cita"""
  total: Float

  """Nota del cliente sobre la cita"""
  note: String
}

input UpdateAppointmentInput {
  """Estado de la cita"""
  status: String

  """Fecha de inicio de la cita"""
  entryDate: DateTime

  """Fecha de finalización de la cita"""
  departureDate: DateTime

  """Hora de la cita"""
  time: DateTime

  """Total de la cita"""
  total: Float

  """Nota del cliente sobre la cita"""
  note: String
  id: Int!

}
input CreateUserInput {
  firstname: String!
  lastname: String!
  birthdate: DateTime!
  address: String!
  role: String!
  credentialsId: String!
  paymentDataIds: [String!]
}

input UpdateUserInput {
  firstname: String
  lastname: String
  birthdate: DateTime
  address: String
  role: String
  credentialsId: String
  paymentDataIds: [String!]
  id: Float!
}

input CreateCredentialInput {
  username: String!
  password: String!
  passport: String!
  email: String!
  verified: Boolean!
}

input UpdateCredentialInput {
  username: String
  password: String
  passport: String
  email: String
  verified: Boolean
  credentialId: String!
}

input CreateSitterInput {
  firstname: String!
  lastname: String!
  birthdate: DateTime!
  address: String!
  role: String!
  credentialsId: String!
  paymentDataIds: [String!]
  area: String!
  rate: Float!
  fee: Float!
}

input UpdateSitterInput {
  id: ID!
  area: String!
  rate: Float!
  fee: Float!
}